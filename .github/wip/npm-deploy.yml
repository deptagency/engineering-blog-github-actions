name: npm deploy
on:
  push:
    branches:
      - 'develop'
  workflow_dispatch:
    inputs:
      envname:
        description: The Cloud Environment to deploy
        required: true
        default: 'staging'
        type: choice
        options:
          - develop
          - staging
          - prod
permissions:
  id-token: write
  contents: read    # This is required for actions/checkout
defaults:
  run:
    shell: bash
env:
  node-version: 14
jobs:
  npm-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Repo
        uses: actions/checkout@v3
      - name: npm build
        uses: ./.github/actions/npm-build
        with:
          node-version: ${{ env.node-version }}
      - name: Cloud Environment setup
        # Avoiding the use of GitHub Environment since it is a paid feature of GitHub Enterprise for private repos
        # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
        run: |
          echo "Cloud env setup for ${{ inputs.envname }}"
          if [[ "${{ inputs.envname }}" == "develop" ]]; then
            echo "::error title=Unsupported envname::The envname ${{ inputs.envname }} is currently turned off"
            exit 1
            # echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_DEVELOP }}" >> $GITHUB_ENV
            # echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOP }}" >> $GITHUB_ENV
            # echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
            # echo "S3_BUCKET=s3://mmj-develop-frontend" >> $GITHUB_ENV
          elif [[ "${{ inputs.envname }}" == "staging" ]] || [[ "${{ inputs.envname }}" == "" ]]; then
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}" >> $GITHUB_ENV
            echo "AWS_REGION=us-east-2" >> $GITHUB_ENV
            echo "S3_BUCKET=s3://mmj-staging-frontend" >> $GITHUB_ENV
          elif [[ "${{ inputs.envname }}" == "prod" ]]; then
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_PROD }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}" >> $GITHUB_ENV
            echo "AWS_REGION=us-west-1" >> $GITHUB_ENV
            echo "S3_BUCKET=s3://mmj-prod-frontend" >> $GITHUB_ENV
          else
            # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
            echo "::error title=Unsupported envname::The envname ${{ inputs.envname }} is unsupported"
            exit 1
          fi
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Display AWS auth ID
        run: aws sts get-caller-identity
      - name: Upload Frontend to S3
        run: aws s3 cp --recursive ./build ${{ env.S3_BUCKET }} --acl="public-read"
      - name: Display summary
        run: |
          echo "### npm deploy to env ${{ inputs.envname }} :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "Uploaded content to ${{ env.S3_BUCKET }} " >> $GITHUB_STEP_SUMMARY
