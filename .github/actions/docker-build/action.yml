name: Docker build and ECR push
description: Build a Docker image and push to ECR repo

inputs:
  ecr-full-repo:
    description: 'ECR repo to push image to'
    required: true
#  ecr-cache-repo:
#    description: 'ECR repo to store image cache'
#    required: true
  dockerfile:
    description: 'Dockerfile to build'
    required: true
    default: 'Dockerfile'
  docker-build-args:
    description: 'Build args for Docker build env'
    required: false
#  docker-secret-ids:
#    description: 'Secret Manager IDs for Docker build env'
#    required: true

runs:
  using: composite
  steps:
    -
      name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: true

#    -
#      name: Get beam api secrets
#      uses: aws-actions/aws-secretsmanager-get-secrets@v1
#      with:
#        secret-ids: ${{ inputs.docker-secret-ids }}

    -
      name: Docker meta
      id: dockermeta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.ecr-full-repo }}

    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    -
      name: Build Tag and Push Docker image
      id: build-image
      uses: docker/build-push-action@v4
      with:
        file: ${{ inputs.dockerfile }}
        context: .
        tags: ${{ steps.dockermeta.outputs.tags }}
        labels: ${{ steps.dockermeta.outputs.labels }}
        push: true
        build-args: ${{ inputs.docker-build-args }}
#        cache-from: type=registry,ref=${{ inputs.ecr-cache-repo }}:dockercache
#        cache-to: type=registry,ref=${{ inputs.ecr-cache-repo }}:dockercache,mode=max,image-manifest=true
